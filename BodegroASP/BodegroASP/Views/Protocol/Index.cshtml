@model ProtocolViewModel

@{
    if (ViewData["SuccessMessage"] != null)
    {
        <script type="text/javascript">
            alert('@ViewData["SuccessMessage"]');
        </script>
    }

    if (ViewData["ErrorMessage"] != null)
    {
        <script type="text/javascript">
            alert('@ViewData["ErrorMessage"]');
        </script>
    }
}

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Create Protocol</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" />
    <style>
        .form-container {
            max-width: 1000px;
            margin: 50px auto;
            background: #fff;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .form-buttons {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
        }

        .steps-container {
            margin-top: 30px;
        }

        .step-item {
            display: flex;
            align-items: center;
            justify-content: space-between;
            background-color: #f8f9fa;
            border: 1px solid #ddd;
            border-radius: 4px;
            padding: 10px;
            margin-bottom: 10px;
        }

            .step-item input {
                width: auto;
                margin: 0 10px;
            }

        .step-controls button {
            margin: 0 5px;
        }
    </style>
</head>
<body>
    <div class="form-container">
        <h1 class="mb-4">Add Protocol Form</h1>
        <form method="post" action="/Protocol/Index">
            <div class="mb-3">
                <label for="Name" class="form-label">Name</label>
                <input type="text" id="Name" name="Name" class="form-control" value="@Model.Name" />
            </div>
            <div class="mb-3">
                <label for="DescriptionBox" class="form-label">Description</label>
                <textarea id="DescriptionBox" name="Description" class="form-control" rows="5">@Model.Description</textarea>
            </div>
            <div class="steps-container">
                <h4>Steps</h4>

                <div id="stepsList">
                    @for (int i = 0; i < Model.Steps.Count; i++)
                    {
                        <div class="step-item">
                            <span>@(i + 1).</span>
                            <input type="text" name="Steps[@i].Name" class="form-control" value="@Model.Steps[i].Name" placeholder="Step Name" />
                            <input type="number" name="Steps[@i].Interval" class="form-control" value="@Model.Steps[i].Interval" placeholder="Interval" />
                            <input type="text" name="Steps[@i].Test" class="form-control" value="@Model.Steps[i].Test" placeholder="Test" />
                            <input type="text" name="Steps[@i].Description" class="form-control" value="@Model.Steps[i].Description" placeholder="Description" />
                        </div>
                    }
                </div>
                <button type="button" class="btn btn-success" onclick="addStep()">Add Step</button>
            </div>

            <div class="form-buttons">
                <button type="submit" class="btn btn-primary">Submit</button>
            </div>
        </form>
    </div>

    <script>
        // Dynamically add steps (updates the DOM but submits with a form post)
        let stepCount = @Model.Steps.Count;
        function addStep() {
            const stepsList = document.getElementById('stepsList');

            const newStep = document.createElement('div');
            newStep.className = 'step-item';
            newStep.innerHTML = `
                <span>${stepCount + 1}.</span>
                <input type="text" name="Steps[${stepCount}].Name" class="form-control" placeholder="Step Name" />
                <input type="number" name="Steps[${stepCount}].Interval" class="form-control" placeholder="Interval" />
                <input type="text" name="Steps[${stepCount}].Test" class="form-control" placeholder="Test" />
                <input type="text" name="Steps[${stepCount}].Description" class="form-control" placeholder="Description" />
            `;

            stepsList.appendChild(newStep);
            stepCount++;
        }
    </script>
</body>
</html>
