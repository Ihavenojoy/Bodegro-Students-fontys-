@model PatientSubscriptionsViewModel
@{
    @if (TempData["SuccessMessage"] != null)
    {
        <script type="text/javascript">
            alert('@TempData["SuccessMessage"]');
        </script>
    }

    if (TempData["ErrorMessage"] != null)
    {
        <script type="text/javascript">
            alert('@TempData["ErrorMessage"]');
        </script>
    }
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Patient Protocols</title>
    <style>
        .container {
            max-width: 900px;
            margin: 0 auto;
            font-family: Arial, sans-serif;
        }

        .patient-card, .subscriptions, .calendar-container {
            margin-bottom: 2rem;
            padding: 1rem;
            border: 1px solid #ccc;
            border-radius: 8px;
            background-color: #f9f9f9;
        }

        .hidden {
            display: none;
        }

        ul {
            list-style-type: none;
            padding: 0;
        }

        .subscription-item {
            margin-bottom: 1rem;
            padding: 0.5rem;
            border: 1px solid #ddd;
            border-radius: 6px;
            background-color: #fff;
        }

        .add-protocol, .delete-protocol {
            background-color: #007bff;
            color: white;
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 4px;
            cursor: pointer;
            margin-right: 10px;
        }

            .add-protocol:hover, .delete-protocol:hover {
                background-color: red;
            }

        .add-protocol, .view-steps {
            background-color: #007bff;
            color: white;
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 4px;
            cursor: pointer;
            margin-right: 10px;
        }

            .add-protocol:hover, .view-steps:hover {
                background-color: #0056b3;
            }

        #protocol-steps-content {
            margin-top: 1rem;
            padding: 1rem;
            border: 1px solid #ddd;
            border-radius: 6px;
            background-color: #f9f9f9;
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Patient Information Card -->
        <div class="patient-card">
            <h2>Patiënt Gegevens</h2>
            <p><strong>Naam:</strong> @Model.Patient.Name</p>
            <p><strong>Email:</strong> @Model.Patient.Email</p>
            <p><strong>Telefoon nummer:</strong> @Model.Patient.PhoneNumber</p>
            <p><strong>Medice Historie:</strong> @Model.Patient.MedicalHistory</p>
        </div>

        <!-- Protocols List -->
        <div class="subscriptions">
            <h2>Subscripties van de Patiënt</h2>
            <ul>
                @foreach (var subscription in Model.Subccriptions)
                {
                    var protocolData = new
                    {
                        patientId = Model.Patient.ID, // Adjust if property names differ
                        protocolId = subscription.Protocol.ID,
                        name = subscription.Protocol.Name, // Optional, for additional display in JavaScript
                        description = subscription.Protocol.Description // Optional
                    };

                    <li class="subscription-item">
                        <p><strong>Subscriptie naam:</strong> @subscription.Protocol.Name</p>
                        <p><strong>Descriptie:</strong> @subscription.Protocol.Description</p>

                        <div class="button-container">
                            <button type="button"
                                    class="delete-protocol"
                                    data-subscription='@Html.Raw(Json.Serialize(subscription))'
                                    onclick="deleteProtocol(this)">
                                Stop Subscriptie
                            </button>
                            <form method="post" action="@Url.Action("VieuwSteps", "Patient")">
                                <input type="hidden" name="id" value="@subscription.Protocol.ID" />
                                <button type="submit" class="btn btn-primary">Subscriptie stappen</button>
                            </form>
                        </div>
                    </li>
                }
            </ul>
        </div>
    </div>

    <!-- Hidden Form for Submission -->

    <form id="ConfirmProtocolLinkingViewModel-form" action="@Url.Action("ConfirmProtocolLinking", "Patient")" method="post">
        <input type="hidden" name="Patient.ID" id="patient-input" value="@Model.Patient.ID" />
        <input type="hidden" name="Protocol.ID" id="protocol-input" />
        <input type="hidden" name="StartDate" id="start-date-input" />
    </form>
    <script>
        function deleteProtocol(button) {
            const subscriptionData = JSON.parse(button.getAttribute('data-subscription'));

            if (confirm('Are you sure you want to delete this protocol?')) {
                fetch(`/Patient/DeleteProtocol`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(subscriptionData)  // Send the entire subscription object
                })
                .then(response => {
                    if (response.ok) {
                        alert('Protocol deleted successfully');
                        // Optionally remove the item from the DOM
                        button.closest('.subscription-item').remove();
                    } else {
                        alert('Failed to delete the protocol');
                    }
                })
                .catch(error => console.error('Error:', error));
            }
        }
    </script>
</body>
</html>